{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Firebase = _interopRequireDefault(require(\"../config/Firebase\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _user = require(\"../actions/user\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\shahar edry\\\\Documents\\\\GitHub\\\\Project_team6\\\\screens\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Login = function (_React$Component) {\n  (0, _inherits2.default)(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.componentDidMount = function () {\n      _Firebase.default.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this.props.getUser(user.uid);\n\n          if (_this.props.user != null) {\n            _this.props.navigation.navigate('Logged');\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleLogin = function () {\n      _this.props.login();\n\n      _this.props.navigation.navigate('Logged');\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputBox,\n        value: this.props.user.email,\n        onChangeText: function onChangeText(email) {\n          return _this2.props.updateEmail(email);\n        },\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputBox,\n        value: this.props.user.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.props.updatePassword(password);\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.props.login();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Login\")), _react.default.createElement(_reactNative.Button, {\n        title: \"Don't have an account yet? Sign up\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('FirstScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return Login;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '85%',\n    margin: 10,\n    padding: 15,\n    fontSize: 16,\n    borderColor: '#d3d3d3',\n    borderBottomWidth: 1,\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: 30,\n    marginBottom: 20,\n    paddingVertical: 5,\n    alignItems: 'center',\n    backgroundColor: '#F6820D',\n    borderColor: '#F6820D',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 200\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  buttonSignup: {\n    fontSize: 12\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return (0, _redux.bindActionCreators)({\n    updateEmail: _user.updateEmail,\n    updatePassword: _user.updatePassword,\n    login: _user.login,\n    getUser: _user.getUser\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/shahar edry/Documents/GitHub/Project_team6/screens/Login.js"],"names":["Login","componentDidMount","Firebase","auth","onAuthStateChanged","user","props","getUser","uid","navigation","navigate","state","email","password","handleLogin","login","styles","container","inputBox","updateEmail","updatePassword","button","buttonText","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","margin","padding","fontSize","borderColor","borderBottomWidth","textAlign","marginTop","marginBottom","paddingVertical","borderWidth","borderRadius","fontWeight","color","buttonSignup","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text, Button } from 'react-native'\r\nimport Firebase from '../config/Firebase'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { updateEmail, updatePassword, login, getUser} from '../actions/user'\r\n\r\nclass Login extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        Firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.props.getUser(user.uid)\r\n                if (this.props.user != null) {\r\n                    this.props.navigation.navigate('Logged')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n     }\r\n\r\n     handleLogin = () => {\r\n        this.props.login()\r\n        this.props.navigation.navigate('Logged')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={this.props.user.email}\r\n                    onChangeText={email => this.props.updateEmail(email)}\r\n                    placeholder='Email'\r\n                    autoCapitalize='none'\r\n                />\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={this.props.user.password}\r\n                    onChangeText={password => this.props.updatePassword(password)}\r\n                    placeholder='Password'\r\n                    secureTextEntry={true}\r\n                />\r\n                <TouchableOpacity style={styles.button} onPress={() => this.props.login()}>\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </TouchableOpacity> \r\n                <Button\r\n                    title=\"Don't have an account yet? Sign up\"\r\n                    onPress={() => this.props.navigation.navigate('FirstScreen')}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    inputBox: {\r\n        width: '85%',\r\n        margin: 10,\r\n        padding: 15,\r\n        fontSize: 16,\r\n        borderColor: '#d3d3d3',\r\n        borderBottomWidth: 1,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        marginTop: 30,\r\n        marginBottom: 20,\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n        backgroundColor: '#F6820D',\r\n        borderColor: '#F6820D',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        width: 200\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff'\r\n    },\r\n    buttonSignup: {\r\n        fontSize: 12\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({ updateEmail, updatePassword, login, getUser }, dispatch)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)"]},"metadata":{},"sourceType":"script"}